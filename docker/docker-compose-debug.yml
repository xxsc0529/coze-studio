name: coze-studio-debug

x-env-file: &env_file
  - .env.debug

services:
  oceanbase:
    image: oceanbase/oceanbase-ce:latest
    container_name: coze-oceanbase
    environment:
      MODE: SLIM
      OB_DATAFILE_SIZE: 1G
      OB_SYS_PASSWORD: ${OCEANBASE_PASSWORD:-coze123}
      OB_TENANT_PASSWORD: ${OCEANBASE_PASSWORD:-coze123}
    profiles: ['middleware']
    env_file: *env_file
    ports:
      - '2881:2881'
    volumes:
      - ./data/oceanbase/ob:/root/ob
      - ./data/oceanbase/cluster:/root/.obd/cluster
      - ./volumes/oceanbase:/root/boot/init.d
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'obclient -h127.0.0.1 -P2881 -uroot@test -pcoze123 -e "SELECT 1;"'
        ]
      interval: 10s
      retries: 30
      start_period: 30s
      timeout: 10s
    networks:
      - coze-network

  minio:
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z-cpuv1
    container_name: coze-minio
    user: root
    privileged: true
    profiles: ['middleware']
    env_file: *env_file
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ./data/minio:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
      MINIO_DEFAULT_BUCKETS: ${MINIO_BUCKET:-opencoze},${MINIO_DEFAULT_BUCKETS:-milvus}
    command: server /data --console-address ":9001"
    healthcheck:
      test:
        [
          'CMD-SHELL',
          '/usr/bin/mc alias set health_check http://localhost:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} && /usr/bin/mc ready health_check',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - coze-network

  etcd:
    image: bitnami/etcd:3.5
    container_name: coze-etcd
    user: root
    privileged: true
    profiles: ['middleware']
    env_file: *env_file
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ALLOW_NONE_AUTHENTICATION=yes
    ports:
      - 2379:2379
      - 2380:2380
    volumes:
      - ./data/bitnami/etcd:/bitnami/etcd:rw,Z
      - ./volumes/etcd/etcd.conf.yml:/opt/bitnami/etcd/conf/etcd.conf.yml:ro,Z
    command: >
      bash -c "
        /opt/bitnami/scripts/etcd/setup.sh
        # Set proper permissions for data and config directories
        chown -R etcd:etcd /bitnami/etcd
        chmod g+s /bitnami/etcd

        exec /opt/bitnami/scripts/etcd/entrypoint.sh /opt/bitnami/scripts/etcd/run.sh
      "
    healthcheck:
      test: ['CMD', 'etcdctl', 'endpoint', 'health']
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s
    networks:
      - coze-network

  nsqlookupd:
    image: nsqio/nsq:v1.2.1
    container_name: coze-nsqlookupd
    command: /nsqlookupd
    profiles: ['middleware']
    ports:
      - '4160:4160'
      - '4161:4161'
    networks:
      - coze-network
    healthcheck:
      test: ['CMD-SHELL', 'nsqlookupd --version']
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  nsqd:
    image: nsqio/nsq:v1.2.1
    container_name: coze-nsqd
    command: /nsqd --lookupd-tcp-address=coze-nsqlookupd:4160 --broadcast-address=coze-nsqd
    profiles: ['middleware']
    ports:
      - '4150:4150'
      - '4151:4151'
    depends_on:
      nsqlookupd:
        condition: service_healthy
    networks:
      - coze-network
    healthcheck:
      test: ['CMD-SHELL', '/nsqd --version']
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  nsqadmin:
    image: nsqio/nsq:v1.2.1
    container_name: coze-nsqadmin
    command: /nsqadmin --lookupd-http-address=coze-nsqlookupd:4161
    profiles: ['middleware']
    ports:
      - '4171:4171'
    depends_on:
      nsqlookupd:
        condition: service_healthy
    networks:
      - coze-network

  minio-setup:
    image: minio/mc:RELEASE.2025-05-21T01-59-54Z-cpuv1
    container_name: coze-minio-setup
    profiles: ['middleware']
    env_file: *env_file
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - ./volumes/minio/default_icon/:/default_icon
      - ./volumes/minio/official_plugin_icon/:/official_plugin_icon
    entrypoint: >
      /bin/sh -c  "
        (/usr/bin/mc alias set localminio http://coze-minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} && \
        /usr/bin/mc mb --ignore-existing localminio/${STORAGE_BUCKET} && \
        /usr/bin/mc cp --recursive /default_icon/ localminio/${STORAGE_BUCKET}/default_icon/ && \
        /usr/bin/mc cp --recursive /official_plugin_icon/ localminio/${STORAGE_BUCKET}/official_plugin_icon/ && \
        echo 'upload files to minio complete: Files uploaded to ${STORAGE_BUCKET} bucket.') || exit 1; \
        echo 'minio-setup completed successfully'; \
        tail -f /dev/null; \
      "
    networks:
      - coze-network
    restart: 'no'
    healthcheck:
      test: ['CMD-SHELL', 'echo "setup completed"']
      interval: 30s
      timeout: 10s
      retries: 1
      start_period: 0s



  coze-server:
    build:
      context: ../
      dockerfile: backend/Dockerfile
    image: opencoze/opencoze:latest
    profiles: ['build-server']

networks:
  coze-network:
    driver: bridge
